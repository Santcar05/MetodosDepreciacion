package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import java.util.ArrayList;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.cell.TextFieldTableCell;
import javafx.stage.Stage;
import javafx.util.StringConverter;

public class EscenaTablaSumaDigitosController {
	@FXML
	private Label titulo;
	@FXML
	private TableView<TablaDepreciacionSumaDigitos> tablaViewSumaDigitos;
	@FXML
	private Button botonDescargarArchivo;
	@FXML
	private Button botonRegresarMenu;

	ArrayList<TablaDepreciacionSumaDigitos> lista = new ArrayList<TablaDepreciacionSumaDigitos>();
	

	
	   public Label getTitulo() {
		return titulo;
	}

	public void setTitulo(Label titulo) {
		this.titulo = titulo;
	}

	public TableView getTablaViewSumaDigitos() {
		return tablaViewSumaDigitos;
	}

	public void setTablaViewSumaDigitos(TableView tablaViewSumaDigitos) {
		this.tablaViewSumaDigitos = tablaViewSumaDigitos;
	}

	public Button getBotonDescargarArchivo() {
		return botonDescargarArchivo;
	}

	public void setBotonDescargarArchivo(Button botonDescargarArchivo) {
		this.botonDescargarArchivo = botonDescargarArchivo;
	}

	public Button getBotonRegresarMenu() {
		return botonRegresarMenu;
	}

	public void setBotonRegresarMenu(Button botonRegresarMenu) {
		this.botonRegresarMenu = botonRegresarMenu;
	}

	public ArrayList<TablaDepreciacionSumaDigitos> getLista() {
		return lista;
	}

	public void setLista(ArrayList<TablaDepreciacionSumaDigitos> lista) {
        this.lista = lista;
        System.out.println("La lista tiene " + lista.size());
        ObservableList<TablaDepreciacionSumaDigitos> data = FXCollections.observableArrayList();
        data.addAll(lista);
        tablaViewSumaDigitos.setItems(data);
	}

	// Este método se llama automáticamente después de que el FXML se ha cargado
    @FXML
    public void initialize() {
        // Crear y configurar columnas
        TableColumn<TablaDepreciacionSumaDigitos, Integer> colAnio = new TableColumn<>("Año");
        colAnio.setCellValueFactory(new PropertyValueFactory<>("anio"));
        TableColumn<TablaDepreciacionSumaDigitos, Double> colFactor = new TableColumn<>("Factor");
        colFactor.setCellValueFactory(new PropertyValueFactory<>("factor"));
        TableColumn<TablaDepreciacionSumaDigitos, Double> colPorcentaje = new TableColumn<>("Porcentaje");
        colPorcentaje.setCellValueFactory(new PropertyValueFactory<>("porcentaje"));
        TableColumn<TablaDepreciacionSumaDigitos, Long> colCuota = createColumn("Cuota Depreciación", "cuotaDepreciacion");
        TableColumn<TablaDepreciacionSumaDigitos, Long> colDepAcum = createColumn("Depreciación Acumulada", "depreciacionAcumulada");
        TableColumn<TablaDepreciacionSumaDigitos, Long> colValorNeto = createColumn("Valor Neto", "valorNeto");

        // Añadir columnas al TableView
        tablaViewSumaDigitos.getColumns().addAll(colAnio,colFactor,colPorcentaje, colCuota, colDepAcum, colValorNeto);
        
        // Configurar los datos de ejemplo
        ObservableList<TablaDepreciacionSumaDigitos> data = FXCollections.observableArrayList(lista);
        tablaViewSumaDigitos.setItems(data);
    }



    // Método auxiliar para crear columnas formateadas
    private TableColumn<TablaDepreciacionSumaDigitos, Long> createColumn(String title, String property) {
        TableColumn<TablaDepreciacionSumaDigitos, Long> column = new TableColumn<>(title);
        column.setCellValueFactory(new PropertyValueFactory<>(property));
        column.setCellFactory(TextFieldTableCell.forTableColumn(new StringConverter<Long>() {
            @Override
            public String toString(Long value) {
                return String.format("%.3f", value.doubleValue() / 1000); // Formato con tres decimales
            }

            @Override
            public Long fromString(String string) {
                return (long) (Double.parseDouble(string) * 1000); // Volver a convertir a long
            }
        }));
        return column;
    }
	
	
	// Event Listener on Button[#botonDescargarArchivo].onAction
	@FXML
	public void descargarArchivo(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#botonRegresarMenu].onAction
	@FXML
	public void devolverMenu(ActionEvent event) {
		try {
			// Cargar el archivo FXML de la segunda escena
			FXMLLoader loader = new FXMLLoader(getClass().getResource("EscenaPrincipal.fxml"));
			Parent escena2Root = loader.load();

			// Obtener el stage actual a partir del botón presionado
			Stage stage = (Stage) ((javafx.scene.Node) event.getSource()).getScene().getWindow();

			// Crear una nueva escena con el diseño de Escena2 y asignarla al stage
			Scene escena2 = new Scene(escena2Root);
			stage.setScene(escena2);
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
}
